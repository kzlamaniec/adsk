---
- hosts: app_nodes
  become: yes
  vars:
    app_url: https://github.com/kzlamaniec/vouchershop/releases/download/v1.0/voucherShop.jar
    java_rpm_url: https://corretto.aws/downloads/latest/amazon-corretto-11-x64-al2-jre.rpm
    app_dest_dir: /opt/voucherShop
    app_user: voucherShop
  tasks:
    - name: Install java runtime
      yum: 
        name: "{{ java_rpm_url }}"

    - name: Create user
      user:
        name: "{{ app_user }}"

    - name: Define dir structure
      file: 
        path: "{{ app_dest_dir }}"
        owner: "{{ app_user }}"
        group: "{{ app_user }}"
        state: directory

    - name: Download app jar file
      get_url:
        url: "{{ app_url }}"
        dest: "{{ app_dest_dir }}"
        owner: "{{ app_user }}"
        group: "{{ app_user }}"

    - name: Put systemd config
      template:
        src: files/systemd/voucherShop.service
        dest: /etc/systemd/system/voucherShop.service

    - name: Enable on boot and start app
      systemd:
         name: voucherShop
         daemon_reload: yes
         enabled: yes
         state: restarted

- hosts: web_nodes
  become: yes
  vars: 
    epel_rm_url: https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
    app_nodes: 
      #- 172.31.44.25:8080
      #- 172.31.37.192:8080
      - 172.31.28.51:3000
  tasks:
    - name: Install epel repo  
      yum:
        name: "{{ epel_rm_url }}" 

    - name: Install nginx
      yum:
        name: nginx

    - name: Punt nginx config into /etc
      template:
        src: files/nginx/voucherShop.conf
        dest: /etc/nginx/conf.d/voucherShop.conf

    - name: Restart nginx
      systemd:
        name: nginx
        enabled: yes
        state: restarted

- hosts: stats_db
  become: yes
  vars: 
    influx_db_rpm_url: https://dl.influxdata.com/influxdb/releases/influxdb-1.8.4.x86_64.rpm
    telegraf_rpm_url: https://dl.influxdata.com/telegraf/releases/telegraf-1.16.2-1.x86_64.rpm
    grafana_rpm_url: https://dl.grafana.com/oss/release/grafana-7.3.7-1.x86_64.rpm
    metrics_db_name: infrastructure
    grafana_url: http://127.0.0.1:3000
    grafana_user: admin
    grafana_pw: ReallySecretPassword
  tasks:
    - name: Install telegraf
      yum:
        name: "{{ telegraf_rpm_url }}"

    - name: Install influxDB
      yum:
        name: "{{ influx_db_rpm_url }}"

    - name: Install grafana
      yum:
        name: "{{ grafana_rpm_url }}"

    - name: Put telegraf config to /ect/telegraf
      template:
        src: files/telegraf/telegraf.conf
        dest: /etc/telegraf/telegraf.conf

    - name: Start services influx
      service:
        name: influxdb
        state: started
    - yum:
        name: python2-pip

    - name: Install influx dependencies
      pip: 
        name: influxdb

    - name: Create db for metrics
      community.general.influxdb_database:
        database_name: "{{ metrics_db_name }}" 
    
    - name: Start services telegraf
      service:
        name: telegraf
        state: restarted

    - name: Put grafana.ini to /ect/garfana
      template:
        src: files/grafana/grafana.ini
        dest: /etc/grafana/grafana.ini

    - name: Start services grafana
      service:
        name: grafana-server
        state: restarted
       
    - name: Create influxdb as grafana data source
      community.grafana.grafana_datasource:
        name: "InfluxDB"
        grafana_url: "{{ grafana_url }}"
        grafana_user: "{{ grafana_user }}"
        grafana_password: "{{ grafana_pw }}"
        org_id: "1"
        ds_type: "influxdb"
        ds_url: "http://127.0.0.1:8086"
        database: "{{ metrics_db_name }}"
        time_interval: ">10s"

    - name: Copy dashboard config to /tmp
      copy:
        src: files/grafana/dashboard.json
        dest: /tmp/dashboard.json

    - name: Import grafana dashboard
      community.grafana.grafana_dashboard:
        grafana_url: "{{ grafana_url }}"
        grafana_user: "{{ grafana_user }}"
        grafana_password: "{{ grafana_pw }}"
        state: present
        commit_message: Updated by ansible
        overwrite: yes
        path: /tmp/dashboard.json

      

    
